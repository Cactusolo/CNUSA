install.packages("picante")
library(picante)
pwd
install.packages("RPANDA")
install.packages("gerger")
install.packages("gerger2")
install.packages("geiger")
library(geiger)
getwd()
write.csv(TPL_results, "checkname_TPLQuery.csv", row.names=FALSE)
source('~/check_nameTPL.R')
install.packages("rotl")
source('~/check_nameTPL.R')
install.packages("Taxonstand")
source('~/check_nameTPL.R')
getwd()
install.packages("raster")
library(raster)
help("raster")
?getData
getData('ISO3')
r <- getData("worldclim",var="bio",res=10)
r <- r[[c(1,12)]]
names(r) <- c("Temp","Prec")
SpatialPoint
?SpatialPoint
points <- spsample(as(r@extent, 'SpatialPolygons'),n=100, type="random")
values <- extract(r,points)
df <- cbind.data.frame(coordinates(points),values)
head(df)
plot(r[[1]])
plot(points,add=T)
install.packages("caper")
caper
?"caper"
??caper
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
BiocManager::install()
?decouple
??decouple
library(vegan)
library(ape)
library(scales)
library(multcomp)
library(FD)
library(hierfstat)
library(psych)
install.packages("scales")
install.packages("multcomp")
install.packages("FD")
install.packages("FD")
install.packages("hierfstat")
install.packages("psych")
install.packages(diversitree)
install.packages('diversitree')
install.packages('GSL')
install.packages('gsl')
getwd()
install.packages("spocc")
library("spocc")
install.packages("dplyr")
library(devtools)
install.packages("stringr")
library(ggpubr)
install.packages("ggpubr")
install.packages("dismo")
x <- 'Double quotes " delimitate R\'s strings.'
x
ls ()
df
install.packages("TeachingDemo")
install.packages("TeachingDemos")
help(qqnorm)
data()
library(scatterplot3d)
library(vegan)
help("vegan")
help(phytools)
??phytools
library("phytools")
library("lme4")
help("lme2")
help("lme4")
library(picante)
?PCD
install.packages("phyr")
# install.packages("https://raw.githubusercontent.com/daijiang/phyr/master/phyr_0.1.5.zip", repos = NULL)
# devtools::install_github("daijiang/phyr")
install.packages("https://raw.githubusercontent.com/daijiang/phyr/master/phyr_0.1.5.tgz", repos = NULL)
?phyr
?phyr::pcd
?pcd_pred
?phyr::pcd_pred
install.packages("gapminder")
library(gapminder)
gapminder
library(ggplot2)
require(ggplot2)
?tidyverse
help(tidyverse)
tidyverse::tidyverse::tidyverse_conflicts()
termplot
?termplot
?picante
?mean
mean
library(bamm)
library(BioGeoBEARS)
BioGeoBEARS
help("BioGeoBEARS")
?axisPhylo2
axisPhylo2
loopVec <- c(10,20,30,40,50)
loopVec <- c(10,20,30,40,50)
for(loopItem in loopVec){
print(loopItem)
}
for(loopItem2 in 1:length(loopVec)){
print(loopItem2)
}
for(loopItem2 in 1:length(loopVec)){
print(loopVec[loopItem2])
}
mylist <- list(20,40,60,70,100)
mylist <- list(20,40,60,70,100)
for(i in mylist){
print(i)
}
mymatrix <- matrix(1:50, nrow = 5)
mymatrix
for(matnumber in mymatrix){
print(matnumber)
}
mymatrix <- matrix(1:50, nrow = 5)
mymatrix
for(matnumber in mymatrix){
print(matnumber^2)
}
for(row in 1:nrow(mymatrix)){
for(col in 1:ncol(mymatrix)){
print(mymatrix[row, col])
}
}
print(paste('row is = ', row, 'and colum = ', col, mymatrix[row, col]))}
for(row in 1:nrow(mymatrix)){
for(col in 1:ncol(mymatrix)){
print(paste('row is = ', row, 'and colum = ', col, mymatrix[row, col]))}
}
for(row in 1:nrow(mymatrix)){
for(col in 1:ncol(mymatrix)){
print(paste('row is = ', row, 'and column = ', col, 'and the value is ', mymatrix[row, col]))}
}
library(dplyr)
?dplyr
datasets::airmiles
dim(airmiles)
library(dplyr)
data("nasa")
nasa
View(nasa)
View(nasa)
dim(nasa)
a <- c(seq(1:10))
a
a[1]
a[2]
a[[2]]
a <- c(seq(1:10),by=2)
a
args(apply)
a <- matrix(1:9,3)
a
?sum
################################
# c01-s01
x = 10.5
add <- function(num1,num2){
sum <- sum(num1,num2)
return(sum)
}
add(1,3)
acacia <- read.csv("http://www.esapubs.org/archive/ecol/E095/064/ACACIA_DREPANOLOBIUM_SURVEY.txt", sep="\t", na.strings = c("dead"))
str(acacia)
acacia <- read.csv("http://www.esapubs.org/archive/ecol/E095/064/ACACIA_DREPANOLOBIUM_SURVEY.txt", sep="\t")
str(acacia)
library(ggplot2)
ggplot(data = acacia, mapping = aes(x = CIRC, y = HEIGHT))
ggplot(data = acacia, mapping = aes(x = CIRC, y = HEIGHT))+geom_point()
library("ggplot")
acacia <- read.csv("http://www.esapubs.org/archive/ecol/E095/064/ACACIA_DREPANOLOBIUM_SURVEY.txt", sep="\t", na.strings = c("dead"))
str(acacia)
class(acacia)
ggplot(acacia, aes(x = CIRC, y = HEIGHT)) +
geom_point(size = 3, color = "blue", alpha = 0.5)
ggplot(acacia, aes(x = CIRC, y = HEIGHT)) +
geom_point(size = 3, color = "blue", alpha = 0.5) +
scale_y_log10() +
scale_x_log10()
ggplot(acacia, aes(x = CIRC, y = HEIGHT)) +
geom_point(size = 3, color = "blue", alpha = 0.5) +
labs(x = "Circumference [cm]", y = "Height [m]",
title = "Acacia Survey at UHURU")
ggplot(acacia, aes(x = CIRC, y = HEIGHT)) +
geom_point(size = 3, alpha = 0.5) +
facet_wrap(~TREATMENT)
ggplot(acacia, aes(x = CIRC, y = HEIGHT, color = TREATMENT)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(acacia, aes(x = TREATMENT)) +
geom_bar()
####### Statistical transformations #######
ggplot(acacia, aes(x = TREATMENT)) +
geom_bar()+
stat_count()
ggplot(acacia, aes(x = CIRC)) +
geom_histogram()
####### Statistical transformations #######
ggplot(acacia, aes(x = CIRC)) +
geom_histogram(bins = 15) +
scale_x_log10() +
facet_wrap(~TREATMENT) +
labs(x = "Circumference", y = "Number of Individuals")
####### Combining different data and aesthetics #######
trees <- read.csv("http://www.esapubs.org/archive/ecol/E095/064/TREE_SURVEYS.txt",
sep="\t", na.strings = c("dead", "missing", "MISSING", "NA"))
trees
ggplot(mapping = aes(x = CIRC, y = HEIGHT)) +
geom_point(data = trees, color = "gray") +
geom_point(data = acacia, color = "red") +
labs(x = "Circumference [cm]", y = "Height [m]")
####### save plots #######
ggsave(“figures/acacia_by_treatment.pdf”, height = 5, width = 5)
ggplot(mapping = aes(x = CIRC, y = HEIGHT)) +
geom_point(data = trees, color = "gray") +
geom_point(data = acacia, color = "red") +
labs(x = "Circumference [cm]", y = "Height [m]")
ggsave(“figures/acacia_by_treatment.pdf”, height = 5, width = 5)
ggsave("figures/acacia_by_treatment.pdf", height = 5, width = 5)
ggsave("figures/acacia_by_treatment.pdf", height = 5, width = 5)
ggplot(mapping = aes(x = CIRC, y = HEIGHT)) +
geom_point(data = trees, color = "gray") +
geom_point(data = acacia, color = "red") +
labs(x = "Circumference [cm]", y = "Height [m]")+
ggsave("figures/acacia_by_treatment.pdf", height = 5, width = 5)
####### save plots #######
?ggsave
####### save plots #######
ggsave("learning.pdf",plot = last_plot(),height = 5, width = 5)
getwd()
?na.strings
??na.strings
na.strings
library("dplyr")
a <- c("Jack","Peter","John")
b <- c(1:3)
data.frame(a,b)
data <- data.frame(a,b)
str(data)
class(data)
select("Jack")
?geom
?geom_
??geom_
library("ggplot")
acacia <- read.csv("http://www.esapubs.org/archive/ecol/E095/064/ACACIA_DREPANOLOBIUM_SURVEY.txt", sep="\t", na.strings = c("dead"))
str(acacia)
class(acacia)
acacia
dataset1 <- acacia %>%
#######
dataset1 <- acacia %>%
filter(YEAR,HEIGHT,AXIS1)
#######
library(dplyr)
dataset1 <- acacia %>%
filter(YEAR,HEIGHT,AXIS1)
dataset1
dataset1 <- acacia %>%
select(YEAR,HEIGHT,AXIS1)
dataset1
install.packages("corrplot")
?climateStability
install.packages("climateStability")
library(climateStability)
help(climateStability)
iris
plot(iris)
betweenss_totss <- list()
############# model-based clustering ###########
library(mclust)
dataset.stand
############# density-based clustering ###########
library("dbscan")
############# density-based clustering ###########
install.packages("dbscan")
library("dbscan")
?raster
library(raster)
rgdal
?rgdal
library(rgdal)
setwd("/Users/lin/Desktop/Functional traits analysis/data/")
library(ape)
library(picante)
library(phytools)
read.csv("Desktop/Reserches/P5-Functional traits analysis/1907_advanced_no_ratio_area/Results/VPA_TRAITS.csv")
a <- read.csv("Desktop/Reserches/P5-Functional traits analysis/1907_advanced_no_ratio_area/Results/VPA_TRAITS.csv")
dim(a)
setwd("Desktop/CNUSA/Species_list_190715/Final_tree_species_list_190718/")
library(ape)
origin.tree <- read.tree("CN_US_5277_speciesname_BR_addJul182019.tre")
tiplabels(origin.tree)
plot(origin.tree)
Ntip(origin.tree)
origin.tree$root.edge
origin.tree$tip.label
class(origin.tree$tip.label)
originlabel <- as.data.frame(origin.tree$tip.label)
originlabel
grep(Ampelopsis_delavayana,originlabel)
grep("Ampelopsis_delavayana",originlabel)
write.csv(originlabel,"originlabel_lookup.csv",quote = F)
# Ampelopsis_delavayana [1499] [1503]
# Carex_atlantica_subsp._capillacea [4620] [4671]
# Eupatorium_mohrii [2388] [2390] [2400]
# Panicum_dichotomum [4118] [4119]
drop.tip(phy = origin.tree, 1503, 4671,2390,2400,4119)
origin.tree
drop.tip
?drop.tip
